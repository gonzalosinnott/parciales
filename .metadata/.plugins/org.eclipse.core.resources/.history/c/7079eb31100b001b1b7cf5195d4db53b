 /*
 ============================================================================
 Name        : utn.c
 Author      : Gonzalo Sinnott Segura
 Version     :
 Copyright   :
 Description : Library utn.c
 ============================================================================
 */

#include <stdio_ext.h>
#include <stdlib.h>
#include <string.h>
#include <limits.h>

static int getInt(int *pValue);
static int isInt(char* string);
static int myGets(char *string, int len);


/**
 * \brief utn_getIntNumber: Asks the user for an int value
 * \param char* msj: Message for the user
 * \param char* errorMsj: Error message
 * \param int* pValue: Pointer to store value given by user
 * \param int retries: amount of retries permitted
 * \param int max: max value admitted
 * \param int min: min value admitted
 * \return (-1) Error / (0) Ok
 */

int utn_getIntNumber(char* msj, char* errorMsj, int* pValue,int retries,int max,int min)
{
	int retorno = -1;
	int bufferInt;

	if(msj != NULL && errorMsj != NULL && pValue != NULL && retries >= 0 && min <= max)
	{
		do
		{
			printf("%s",msj);
			if(getInt(&bufferInt) == 0 && bufferInt >= min && bufferInt <= max)
			{
				*pValue = bufferInt;
				retorno = 0;
				break;
			}
			else
			{
				printf("%s Quedan %d reintentos\n",errorMsj, retries);
				retries--;
			}
		}while(retries > 0);
	}
	return retorno;
}

/**
 * \brief getInt: Asks the user for an integer number, converts it to string,
 *  then validates said value and returns it as an integer.
 * \param int* pValue: pointer to Value given by user.
 * \return (-1) Error / (0) Ok
 */

static int getInt(int *pValue)
{
	int retorno = -1;
	char buffer[64];
	if(pValue != NULL)
	{
		if(myGets(buffer,sizeof(buffer))==0 && isInt(buffer))
		{
			*pValue = atoi(buffer);
			retorno = 0;
		}
	}
	return retorno;
}

/**
 * \brief myGets: Reads from stdin until a '\n' (finalization character)
 *  or until it has copied a string of a length of lenght - 1 characters .
 * \param char *string: Pointer to memory space where string will be copied
 * \param int len: String lenght
 * \return (-1) Error / (0) Ok
 */

static int myGets(char *string, int len)
{
	int retorno = -1;
	__fpurge(stdin);
	if(string != NULL && len > 0 && fgets (string, len, stdin) == string)
	{
		if(string[strlen(string)-1]=='\n')
		{
			string[strlen (string) - 1] = '\0';
		}
		retorno = 0;
	}
	return retorno;
}

static int isInt(char* string)
{
	int retorno = 1;
	int i = 0;

	if(string[0] == '-')
	{
		i = 1;
	}
	if(string != NULL && strlen(string) > 0)
	{
		while(string[i] != '\0')
		{
			if(string[i] < '0' || string[i] > '9' )
			{
				retorno = 0;
				break;
			}
			i++;
		}
	}
	return retorno;
}
